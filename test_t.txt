unit Unit1;

interface

type
  TProcNDS = 0..99;

procedure CalcPrices(InputPriceWithNDS: double; ProcNDS: TProcNDS; out CorrectedPriceWithNDS, CorrectedPriceWithoutNDS: double);

implementation

procedure CalcPrices(InputPriceWithNDS: double; ProcNDS: TProcNDS; out CorrectedPriceWithNDS, CorrectedPriceWithoutNDS: double);
begin
//  Есть правило:
//  [Цена с НДС] = [Цена без НДС] * (1 + [Процент НДС] / 100)
//  Или запишем иначе
//  CorrectedPriceWithNDS = CorrectedPriceWithoutNDS * (1 + ProcNDS / 100)

//  Входные параметры процедуры:
//  1. Внешняя система рассчитывает и передает нам рекомендованную цену с НДС - InputPriceWithNDS,
//  содержащую до 20 знаков после зарпятой
//  2. Процент НДС  -  ProcNDS : 0..99

//  ЗАДАЧА: Процедура должна рассчитать значение цен с НДС и без НДС (CorrectedPriceWithNDS,
//  CorrectedPriceWithoutNDS) так, чтобы CorrectedPriceWithNDS была предельно близко
//  к InputPriceWithNDS: |CorrectedPriceWithNDS-InputPriceWithNDS| -> min ...  и при этом
//  CorrectedPriceWithNDS и CorrectedPriceWithoutNDS содержали максимум 2 знака после
//  запятой и не требовали округлений. Обратите внимание не требовали округлений. 
//Обязательно по эксперементируйте с разными вариантами ставки НДС и значений цен.

//  Например -
//  CalcPrices(1.81, 20, CorrectedPriceWithNDS, CorrectedPriceWithoutNDS)
//  должна вернуть -
//  CorrectedPriceWithNDS     = 1.8
//  CorrectedPriceWithoutNDS  = 1.5
//
//  CalcPrices(1.81, 18, CorrectedPriceWithNDS, CorrectedPriceWithoutNDS)
//  должна вернуть -
//  CorrectedPriceWithNDS     = 1.77
//  CorrectedPriceWithoutNDS  = 1.5
//  CalcPrices(5.05 27, CorrectedPriceWithNDS, CorrectedPriceWithoutNDS)
//  должна вернуть -
//  CorrectedPriceWithNDS     = 5.08
//  CorrectedPriceWithoutNDS  = 4
//  3. Сделать интерфейс для проверки корректности вашего решения.
end;

end.

